{
  "swagger": "2.0",
  "info": {
    "description": "Delivery order API is a RESTful API that caters for creation of `order` resource and also actions like calculation of delivery order price.\n\nFor your convenience, other common API endpoints are also documented here.\n#### Sample Requests\nFor a list of sample requests, do take a look at our document [here](https://drive.google.com/open?id=1mvxVf1FsjIRfflxLrEIOVc9-IN8GxA3i).\n\n#### Important Integration Requirement\nPlease take note of the following points:\n* We require shippers to cache the authorization access tokens for their API integration.\n* Shippers are encouraged to retry order creation requests IF a ***HTTP 5xx*** error is returned from our API.\n* If a ***HTTP 4xx*** error is returned, please log the response for your debugging purposes.\n    * ***DO NOT*** retry the same order creation request without fixing the error specified in the response.\n\n* If access to waybill generation API is required, please take note that access to the API is conditional.\n    * Shipper ***must*** cache waybill upon generation and avoid excessive calls to the waybill API.\n\n* An integration audit will be done before access to production API can be granted.\n    * Please send in 3 different orders, reflective of the type of orders you will be sending in production, with accurate address and other information.\n      * We are looking for order requests sent in via the integration that was built.\n    * Drop us an email at devsupport@ninjavan.co with the tracking numbers of those orders and the business requirements and we will do a check.\n\n\n#### Base URL Mapping By Environment\n\n  | Environment | Base URL |\n  |-------------|----------|\n  | Production  | https://api.ninjavan.co |\n  | Sandbox     | https://api-sandbox.ninjavan.co (***REFER TO NOTE BELOW***)|\n  \n***NOTE:*** Please send all sandbox requests to the Singapore sandbox API.  However, you will be able to send in localized addresses for the countries that you are testing for.\n\nIn other words, you can craft the API request as you would for the production environment;  the only difference is the URL.\n#### Tracking API (Webooks)\n\n  We provide a webhook API for ***PUSH*** type updates for tracking of parcels. \n  More information available [here](https://drive.google.com/open?id=1Xt48_WRIqMIj9tEWTLh4z5Z588d93A9V).\n  \n  \n  Unfortunately for now, we do not support any ***PULL*** type status tracking APIs.",
    "version": "4.1.0",
    "title": "Order API",
    "contact": {
      "email": "devsupport@ninjavan.co"
    }
  },
  "host": "api.ninjavan.co",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{countryCode}/2.0/oauth/access_token": {
      "x-summary": "Generate OAuth Access Token",
      "post": {
        "description": "Request a new OAuth Bearer Access Token.\n\nShippers will need their client ID and secret for this request. The client ID and secret can be retrieved from the shipper's dashboard, under the API settings section.\n\n***Please ensure that the following flow is followed in your implementation***:\n* Generate an OAuth access token.\n* Store it in persistent storage (database) or cache and also store the expiration timestamp.\n* Attach access token as a bearer token with every API request to Ninja Van API. \n    * i.e. For the `Authorization` HTTP header, the value should be `Bearer <INSERT ACCESS TOKEN>`.\n\n* 5 minutes before the token expires, or if the API request to Ninja Van API is responded with a ***HTTP 401*** error, generate a new OAuth access token.\n\n***NOTE:*** Validity period is dynamic, and it might change from time to time.  The minimum validity period will be ***1 hour***.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country Code",
            "required": true,
            "type": "string",
            "enum": [
              "SG",
              "MY",
              "TH",
              "ID",
              "VN",
              "PH",
              "MM"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AccessTokenGrantRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Access token was successfully generated.",
            "schema": {
              "$ref": "#/definitions/AccessTokenGrantResponse"
            }
          },
          "400": {
            "description": "Access token was NOT generated because of an issue with the request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Access token was NOT generated because of an issue with the server.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{countryCode}/4.1/orders": {
      "x-summary": "Create Order (v4.1 - Latest)",
      "post": {
        "description": "Creates a new delivery order.  \n\nTo avoid create duplicate orders, please send in the `requested_tracking_number` field, and the API will use it to generate the waybill tracking number. ***This is highly recommended.***\n\nIf your shipper account is a prefixless account, `requested_tracking_number` is ***required***.\n\nIf your shipper account has a tracking number prefix configured, the API will concat your prefix with the `requested_tracking_number` to generate the waybill tracking number.\n\nIf `requested_tracking_number` is not provided, the API will auto-generate a random tracking number, and concat your prefix with the `requested_tracking_number` to generate the waybill tracking number. A generic prefix will be used for this request, if your account does not have a prefix *AND* if the `requested_tracking_number` is not provided.\n\nThe total length of the generated `tracking_number` is also further validated based on your shipper setting.  The default length for `tracking_number` is usually around 18 characters.  If the `requested_tracking_number` is too short, the API will auto-pad the value with `0`s. Please check with us if you have any questions regarding your shipper account settings.\n\nFor marketplace platforms, `marketplace` information is required. Using the provided `seller_id`, the API will automatically create a new Ninja Van shipper account for your marketplace seller, _IF_ the `seller_id` was not registered in Ninja Van's systems beforehand.\n\n#### Address fields\n\n  | Country | Field | Description |\n  |---------|-------|-------------|\n  | Singapore | address1 | |\n  | Singapore | address2 | |\n  | Singapore | country | |\n  | Singapore | postcode | |\n  | Singapore | latitude | |\n  | Singapore | longitude | |\n  | Singapore | address_type | |\n  | Malaysia | address1 | |\n  | Malaysia | address2 | |\n  | Malaysia | area | |\n  | Malaysia | city | |\n  | Malaysia | state | |\n  | Malaysia | country | |\n  | Malaysia | postcode | |\n  | Malaysia | latitude | |\n  | Malaysia | longitude | |\n  | Malaysia | address_type | |\n  | Thailand | address1 | |\n  | Thailand | address2 | |\n  | Thailand | sub_district | |\n  | Thailand | district | |\n  | Thailand | province | |\n  | Thailand | country | |\n  | Thailand | postcode | |\n  | Thailand | latitude | |\n  | Thailand | longitude | |\n  | Thailand | address_type | |\n  | Indonesia | address1 | |\n  | Indonesia | address2 | |\n  | Indonesia | kelurahan | |\n  | Indonesia | kecamatan | |\n  | Indonesia | city | |\n  | Indonesia | province | |\n  | Indonesia | country | |\n  | Indonesia | postcode | |\n  | Indonesia | latitude | |\n  | Indonesia | longitude | |\n  | Indonesia | address_type | |\n  | Philippines | address1 | |\n  | Philippines | address2 | |\n  | Philippines | subdivision | Also known as \"Barangay\"|\n  | Philippines | district | |\n  | Philippines | city | |\n  | Philippines | province | |\n  | Philippines | country | |\n  | Philippines | postcode | |\n  | Philippines | latitude | |\n  | Philippines | longitude | |\n  | Philippines | address_type | |\n  | Vietnam | address1 | |\n  | Vietnam | address2 | |\n  | Vietnam | ward | |\n  | Vietnam | district | |\n  | Vietnam | city | |\n  | Vietnam | country | |\n  | Vietnam | latitude | |\n  | Vietnam | longitude | |\n  | Vietnam | address_type | |\n  | Myanmar | address1 | |\n  | Myanmar | address2 | |\n  | Myanmar | township | |\n  | Myanmar | district | |\n  | Myanmar | state | |\n  | Myanmar | country | |\n  | Myanmar | postcode | |\n  | Myanmar | latitude | |\n  | Myanmar | longitude | |\n  | Myanmar | address_type | |\n  | Others | address1 | |\n  | Others | address2 | |\n  | Others | city | |\n  | Others | state | |\n  | Others | country | |\n  | Others | postcode | |\n\n  ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Please include your bearer token here."
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country Code",
            "required": true,
            "type": "string",
            "enum": [
              "SG",
              "MY",
              "TH",
              "ID",
              "VN",
              "PH",
              "MM"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NewOrderV4.1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order successfully created.",
            "schema": {
              "$ref": "#/definitions/OrderV4.1"
            }
          },
          "400": {
            "description": "Order was NOT created because of an issue with the request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Order was NOT created because of an issue with the server.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{countryCode}/4.0/orders": {
      "x-summary": "Create Order (V4.0 - Deprecated)",
      "post": {
        "description": "***NOTE:*** _DEPRECATED!_ Please do not use.\nCreates a new delivery order.  \n\nTo avoid create duplicate orders, please send in the `requested_tracking_number` field, and the API will use it to generate the waybill tracking number. ***This is highly recommended.***\n\nIf your shipper account is a prefixless account, `requested_tracking_number` is ***required***.\n\nIf your shipper account has a tracking number prefix configured, the API will concat your prefix with the `requested_tracking_number` to generate the waybill tracking number.\n\nIf `requested_tracking_number` is not provided, the API will auto-generate a random tracking number, and concat your prefix with the `requested_tracking_number` to generate the waybill tracking number. A generic prefix will be used for this request, if your account does not have a prefix *AND* if the `requested_tracking_number` is not provided.\n\nThe total length of the generated `tracking_number` is also further validated based on your shipper setting.  The default length for `tracking_number` is usually around 18 characters.  If the `requested_tracking_number` is too short, the API will auto-pad the value with `0`s. Please check with us if you have any questions regarding your shipper account settings.\n\nFor marketplace platforms, `marketplace` information is required. Using the provided `seller_id`, the API will automatically create a new Ninja Van shipper account for your marketplace seller, _IF_ the `seller_id` was not registered in Ninja Van's systems beforehand.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Please include your bearer token here."
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country Code",
            "required": true,
            "type": "string",
            "enum": [
              "SG",
              "MY",
              "TH",
              "ID",
              "VN",
              "PH",
              "MM"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NewOrderV4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order successfully created.",
            "schema": {
              "$ref": "#/definitions/OrderV4"
            }
          },
          "400": {
            "description": "Order was NOT created because of an issue with the request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Order was NOT created because of an issue with the server.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{countryCode}/2.0/reports/waybill": {
      "x-summary": "Generate Waybill",
      "get": {
        "description": "Generate waybill for an order that has been processed successfully.\n\n***NOTE:*** Please take note that access to the Waybill API is *conditional*.  By default, permissions for this API would not granted to any shipper, even in the sandbox environment. Please take a look at our integration requirements first, and email in to devsupport@ninjavan.co to request for permission.\n\n***NOTE:*** Waybill can only be generated for orders that have been successfully processed.  After an order is accepted by the order create API, it goes into a queue for further processing. When an order is fully processed, a `Pending Pickup` webhook is generated.  This webhook should give your system a good indication of when a waybill can be generated.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Please include your bearer token here."
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country Code",
            "required": true,
            "type": "string",
            "enum": [
              "SG",
              "MY",
              "TH",
              "ID",
              "VN",
              "PH",
              "MM"
            ]
          },
          {
            "name": "tids",
            "in": "query",
            "description": "The `tracking_number` as generated by the order create API.",
            "required": true,
            "type": "string",
            "pattern": "^([a-zA-Z0-9]+[-])*[a-zA-Z0-9]+$",
            "minLength": 9
          },
          {
            "name": "h",
            "in": "query",
            "description": "A flag for hiding shipper details (e.g. shipper's contact) on the waybill.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Waybill successfully generated. A PDF file will be returned in the response."
          },
          "400": {
            "description": "Waybill was NOT generated because of an invalid request."
          }
        }
      }
    },
    "/{countryCode}/2.2/orders/{trackingNo}": {
      "x-summary": "Cancel Order",
      "delete": {
        "description": "Cancels an existing delivery order.\n\n***NOTE:*** Parameters are named slightly differently, because this endpoint has not been migrated to the v4 API specs.\n\n***NOTE:*** For cancellation of orders, please note that only orders that are `Pending Pickup` can be cancelled.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Please include your bearer token here."
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country Code",
            "required": true,
            "type": "string",
            "enum": [
              "SG",
              "MY",
              "TH",
              "ID",
              "VN",
              "PH",
              "MM"
            ]
          },
          {
            "name": "trackingNo",
            "in": "path",
            "description": "The `requested_tracking_number` provided by the shipper in the order create request.",
            "required": true,
            "type": "string",
            "pattern": "^([a-zA-Z0-9]+[-])*[a-zA-Z0-9]+$",
            "minLength": 9
          }
        ],
        "responses": {
          "200": {
            "description": "Order successfully cancelled.",
            "schema": {
              "$ref": "#/definitions/CancelOrderResponse"
            }
          },
          "400": {
            "description": "Order was NOT cancelled because of an issue with the request."
          },
          "404": {
            "description": "Order was NOT cancelled because no orders were found that matched the query parameters."
          },
          "500": {
            "description": "Order was NOT cancelled because of an issue with the server."
          }
        }
      }
    }
  },
  "definitions": {
    "LegacyOrder": {
      "type": "object",
      "properties": {
        "tracking_id": {
          "type": "string"
        },
        "requested_tracking_id": {
          "type": "string"
        },
        "order_ref_no": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "from_postcode": {
          "type": "string"
        },
        "from_address1": {
          "type": "string"
        },
        "from_address2": {
          "type": "string"
        },
        "from_locality": {
          "type": "string"
        },
        "from_city": {
          "type": "string"
        },
        "from_country": {
          "type": "string"
        },
        "from_email": {
          "type": "string"
        },
        "from_name": {
          "type": "string"
        },
        "from_contact": {
          "type": "string"
        },
        "to_postcode": {
          "type": "string"
        },
        "to_address1": {
          "type": "string"
        },
        "to_address2": {
          "type": "string"
        },
        "to_locality": {
          "type": "string"
        },
        "to_city": {
          "type": "string"
        },
        "to_country": {
          "type": "string"
        },
        "to_email": {
          "type": "string"
        },
        "to_name": {
          "type": "string"
        },
        "to_contact": {
          "type": "string"
        },
        "pickup_instructions": {
          "type": "string"
        },
        "delivery_instructions": {
          "type": "string"
        },
        "delivery_date": {
          "type": "string"
        },
        "parcel_size": {
          "type": "integer"
        },
        "parcel_volume": {
          "type": "integer",
          "format": "double"
        },
        "parcel_weight": {
          "type": "integer",
          "format": "double"
        },
        "max_delivery_days": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 10
        },
        "id": {
          "type": "string",
          "description": "Async handle of the order."
        }
      }
    },
    "OrderV4": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewOrderV4"
        },
        {
          "required": [
            "tracking_number"
          ],
          "properties": {
            "tracking_number": {
              "type": "string",
              "pattern": "^([a-zA-Z0-9]+[-])*[a-zA-Z0-9]+$"
            }
          }
        }
      ],
      "example": {
        "service_type": "Parcel",
        "service_level": "Standard",
        "tracking_number": "1234-56789",
        "requested_tracking_number": "1234-56789",
        "reference": {
          "merchant_order_number": "SHIP-1234-56789"
        },
        "from": {
          "name": "John Doe",
          "phone_number": "+60122222222",
          "email": "john.doe@gmail.com",
          "address": {
            "address1": "17 Lorong Jambu 3",
            "address2": "",
            "area": "Taman Sri Delima",
            "city": "Simpang Ampat",
            "state": "Pulau Pinang",
            "country": "MY",
            "postcode": "51200"
          }
        },
        "to": {
          "name": "Jane Doe",
          "phone_number": "+6212222222222",
          "email": "jane.doe@gmail.com",
          "address": {
            "address1": "Gedung Balaikota DKI Jakarta",
            "address2": "Jalan Medan Merdeka Selatan No. 10",
            "kelurahan": "Kelurahan Gambir",
            "kecamatan": "Kecamatan Gambir",
            "city": "Jakarta Selatan",
            "province": "Jakarta",
            "country": "ID",
            "postcode": "10110"
          }
        },
        "parcel_job": {
          "pickup_instructions": "Pickup with care!",
          "delivery_instructions": "If recipient is not around, leave parcel in power riser.",
          "delivery_start_date": "2017-01-20",
          "delivery_timeslot": {
            "start_time": "09:00",
            "end_time": "22:00",
            "timezone": "Asia/Singapore"
          }
        }
      }
    },
    "NewOrderV4": {
      "type": "object",
      "required": [
        "service_type",
        "service_level",
        "from",
        "to"
      ],
      "properties": {
        "service_type": {
          "$ref": "#/definitions/ServiceType"
        },
        "service_level": {
          "$ref": "#/definitions/ServiceLevel"
        },
        "requested_tracking_number": {
          "type": "string",
          "pattern": "^([a-zA-Z0-9]+[-])*[a-zA-Z0-9]+$",
          "minLength": 9,
          "description": "If your shipper account is a prefixless account, `requested_tracking_number` is ***required***.\n\nIf your shipper account has a tracking number prefix configured, the API will concat your prefix with the `requested_tracking_number` to generate the waybill tracking number.\n\nIf `requested_tracking_number` is not provided, the API will auto-generate a random tracking number, and concat your prefix with the `requested_tracking_number` to generate the waybill tracking number.\n\nThe total length of the generated `tracking_number` is also further validated based on your shipper setting.  The default length for `tracking_number` is usually around 18 characters.  If the `requested_tracking_number` is too short, the API will auto-pad the value with `0`s. Please check with us if you have any questions regarding your shipper account settings.\n\nFor marketplace platforms, `marketplace` information is required. Using the provided `seller_id`, the API will automatically create a new Ninja Van shipper account for your marketplace seller, _IF_ the `seller_id` was not registered in Ninja Van's systems beforehand."
        },
        "reference": {
          "type": "object",
          "description": "Reference information. This information is returned to shipper via webhooks, and can be used as query parameters when retrieving orders from Ninja Van's API.",
          "properties": {
            "merchant_order_number": {
              "type": "string",
              "description": "Identifier of order in shipper's systems.",
              "maxLength": 255
            }
          }
        },
        "from": {
          "type": "object",
          "description": "This data is used for the following purposes:\nIt is used:\n* As the contact details for informing sender regarding parcel updates,\n* As the address details to be printed in the waybill",
          "allOf": [
            {
              "$ref": "#/definitions/NewRecipient"
            }
          ]
        },
        "to": {
          "type": "object",
          "description": "This data is used as the delivery destination\nIt is used \n* as the contact details for informing recipient regarding parcel updates,\n* as the address details to be printed in the waybill",
          "allOf": [
            {
              "$ref": "#/definitions/NewRecipient"
            }
          ]
        },
        "marketplace": {
          "$ref": "#/definitions/NewMarketplaceOrder"
        },
        "parcel_job": {
          "type": "object",
          "description": "Details of parcel pickup and delivery job.\n\nIf pickup address is not provided, we will rely on the default pickup address, specified in the shipper pickup reservation settings.",
          "required": [
            "is_pickup_required",
            "delivery_timeslot",
            "delivery_start_date"
          ],
          "properties": {
            "ready_to_ship_date": {
              "type": "string",
              "pattern": "^([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))$",
              "description": "If shipper can only ship the parcel on a later date, please indicate the `ready_to_ship_date`. Please take note that the acceptable format is `yyyy-MM-dd`.\n\nThis will be used for Ninja Van's auto pickup reservations;  If a shipper is configured for auto pickup reservations,  we will create a pickup reservation on the `ready_to_ship_date`.  If `ready_to_ship_date` is not provided, and the shipper is configured  for auto pickup reservations, we will assume that the parcel is ready to ship at the point of order creation.\n\n***NOTE:*** This is different from `pickup_date`, and this parameter  will only be applied for shippers configured for auto-pickup reservations."
            },
            "is_pickup_required": {
              "type": "boolean",
              "description": "Boolean flag that indicates whether or not a pickup reservation is required. \nIf specified as `true`, the system will check if a  pickup reservation exists with the same:\n* `pickup_date`\n* `pickup_address_slot_id`\n\nA new pickup reservation will be created if none exists,  and it will be tied to the specified `pickup_address_slot_id`.\n\nTo update the pickup address for a specific `pickup_address_slot_id`, the options are:\n* Calling Ninja Van's shipper support hotline.\n* Updating the address tied to the `pickup_address_slot_id` via an API that will be released in the future.\n* Sending in a new order with an updated pickup address.\n    * The pickup address specified in either the `from` or `pickup_address` field will be used to update the address\n    tied to the `pickup_address_slot_id`.\n    \n    * ***NOTE:*** Existing pickup reservations tied to this `pickup_address_slot_id` will not be modified in any way.\n\n\nTo update the pickup timeslot for a specific pickup reservation, the options are:\n* Calling Ninja Van's shipper support hotline.\n* Sending in a new order with the same `pickup_address_slot_id`, `pickup_date` but with a different `pickup_timeslot`.\n\nFor more details, please refer to the notes for `pickup_timeslot`  and `pickup_address_slot_id` fields.\n\nPlease note that the following fields must be provided if pickup is required:\n* `pickup_date`\n* `pickup_timeslot`\n* `pickup_address_slot_id`\n* `pickup_approx_volume`\n\n***NOTE:*** Please do not use this parameter if your shipper account is configured for auto-pickup reservations.",
              "default": false
            },
            "pickup_address": {
              "$ref": "#/definitions/NewRecipient"
            },
            "pickup_address_slot_id": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10,
              "description": "Every shipper has 10 different pickup address slots allocated in the system. Please indicate a pickup slot (from 1 to 10) to use for storing this pickup address.\n\nFor each order create API request, if pickup is requested, the system will check if the specified pickup address (taken from the `from` or `pickup_address` field) is different from the existing address stored in the specified pickup address slot.\n\nIf the specified pickup address is different from the existing address stored in the pickup address slot, the system will:\n* Perform a `PUT` operation and replace the address stored in the pickup address slot.\n* Update the address for all pickup reservations tied to this pickup address slot."
            },
            "pickup_date": {
              "type": "string",
              "pattern": "^([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))$",
              "description": "Specifies the date for which the pickup will occur. Please take note that the acceptable format is `yyyy-MM-dd`.\n\nThe system will adjust the pickup date automatically to the next available working day,  if the specified pickup date:\n* Is on a blocked date (e.g. public holiday or warehouse closure),\n* Does not meet the cut-off time for pickup reservations for that day.\n\nAny adjustments to pickup date will be returned in the response."
            },
            "pickup_timeslot": {
              "$ref": "#/definitions/TimeslotInfo",
              "description": "Specifies the timeslot for which the pickup will occur.\n\nIf the specified pickup timeslot is different from the existing pickup reservation for the specified `pickup_date`, for the specified pickup address, the system will:\n\n* Perform a `PUT` operation and replace the pickup timeslot  for the existing pickup reservation on the specified `pickup_date` at the specified pickup address.\n\n***Note:*** Valid timeslots are:\n* \"09:00\" to \"12:00\"\n* \"09:00\" to \"18:00\"\n* \"09:00\" to \"22:00\"\n* \"12:00\" to \"15:00\"\n* \"15:00\" to \"18:00\"\n* \"18:00\" to \"22:00\""
            },
            "pickup_approx_volume": {
              "type": "string",
              "enum": [
                "Full-Van Load",
                "Half-Van Load",
                "Larger than Van Load",
                "Less than 10 Parcels",
                "Less than 3 Parcels",
                "Trolley Required"
              ],
              "default": "Less than 3 Parcels"
            },
            "pickup_instructions": {
              "type": "string",
              "description": "Instruction to driver for pickup attempts."
            },
            "delivery_start_date": {
              "type": "string",
              "pattern": "^([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))$",
              "description": "Specifies the start date of the delivery period. E.g. For standard orders that takes 3 days, if the  `delivery_start_date` is on `2017-02-10`, the delivery will be attempted anytime from `2017-02-10` to `2017-02-12`. Please take note that the acceptable format is `yyyy-MM-dd`.  \n\nDate will be adjusted for blocked dates automatically.  Please double check adjusted `delivery_start_date` in response.\n\nIf order is created before cut-off time, `delivery_start_date`  is defaulted to the same day (if that day is not a blocked date); otherwise `delivery_start_date` is defaulted to the next available date."
            },
            "delivery_timeslot": {
              "$ref": "#/definitions/TimeslotInfo"
            },
            "delivery_instructions": {
              "type": "string",
              "description": "Instruction to driver for delivery attempts."
            },
            "allow_weekend_delivery": {
              "type": "boolean",
              "default": true,
              "description": "Specifies whether or not deliveries should be attempted on weekends."
            },
            "cash_on_delivery": {
              "type": "number",
              "format": "double",
              "description": "Specifies the cash that should be picked up from recipient of the parcel."
            },
            "insured_value": {
              "type": "number",
              "format": "double",
              "description": "Specifies the desired insured value of the parcel."
            },
            "dimensions": {
              "$ref": "#/definitions/Dimension",
              "description": "Specifies the dimension of the parcel. This is used for parcel rates calcuations.\n\n***NOTE:*** Please check with your Ninja Van sales rep to see which  dimension properties should you be sending in."
            }
          }
        }
      },
      "example": {
        "service_type": "Parcel",
        "service_level": "Standard",
        "requested_tracking_number": "1234-56789",
        "reference": {
          "merchant_order_number": "SHIP-1234-56789"
        },
        "from": {
          "name": "John Doe",
          "phone_number": "+60122222222",
          "email": "john.doe@gmail.com",
          "address": {
            "address1": "17 Lorong Jambu 3",
            "address2": "",
            "area": "Taman Sri Delima",
            "city": "Simpang Ampat",
            "state": "Pulau Pinang",
            "country": "MY",
            "postcode": "51200"
          }
        },
        "to": {
          "name": "Jane Doe",
          "phone_number": "+6212222222222",
          "email": "jane.doe@gmail.com",
          "address": {
            "address1": "Gedung Balaikota DKI Jakarta",
            "address2": "Jalan Medan Merdeka Selatan No. 10",
            "kelurahan": "Kelurahan Gambir",
            "kecamatan": "Kecamatan Gambir",
            "city": "Jakarta Selatan",
            "province": "Jakarta",
            "country": "ID",
            "postcode": "10110"
          }
        },
        "parcel_job": {
          "pickup_instructions": "Pickup with care!",
          "delivery_instructions": "If recipient is not around, leave parcel in power riser.",
          "delivery_start_date": "2017-01-20T00:00:00.000Z",
          "delivery_timeslot": {
            "start_time": "09:00",
            "end_time": "22:00",
            "timezone": "Asia/Singapore"
          }
        }
      }
    },
    "OrderV4.1": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewOrderV4.1"
        },
        {
          "required": [
            "tracking_number"
          ],
          "properties": {
            "tracking_number": {
              "type": "string",
              "pattern": "^([a-zA-Z0-9]+[-])*[a-zA-Z0-9]+$"
            }
          }
        }
      ],
      "example": {
        "service_type": "Parcel",
        "service_level": "Standard",
        "tracking_number": "PREFIX-1234-56789",
        "requested_tracking_number": "1234-56789",
        "reference": {
          "merchant_order_number": "SHIP-1234-56789"
        },
        "from": {
          "name": "John Doe",
          "phone_number": "+60122222222",
          "email": "john.doe@gmail.com",
          "address": {
            "address1": "17 Lorong Jambu 3",
            "address2": "",
            "area": "Taman Sri Delima",
            "city": "Simpang Ampat",
            "state": "Pulau Pinang",
            "country": "MY",
            "postcode": "51200"
          }
        },
        "to": {
          "name": "Jane Doe",
          "phone_number": "+6212222222222",
          "email": "jane.doe@gmail.com",
          "address": {
            "address1": "Gedung Balaikota DKI Jakarta",
            "address2": "Jalan Medan Merdeka Selatan No. 10",
            "kelurahan": "Kelurahan Gambir",
            "kecamatan": "Kecamatan Gambir",
            "city": "Jakarta Selatan",
            "province": "Jakarta",
            "country": "ID",
            "postcode": "10110"
          }
        },
        "parcel_job": {
          "is_pickup_required": true,
          "pickup_address_id": 98989012,
          "pickup_service_type": "Scheduled",
          "pickup_service_level": "Premium",
          "pickup_date": "2018-01-18T00:00:00.000Z",
          "pickup_timeslot": {
            "start_time": "09:00",
            "end_time": "12:00",
            "timezone": "Asia/Singapore"
          },
          "pickup_instructions": "Pickup with care!",
          "delivery_instructions": "If recipient is not around, leave parcel in power riser.",
          "delivery_start_date": "2018-01-19",
          "delivery_timeslot": {
            "start_time": "09:00",
            "end_time": "22:00",
            "timezone": "Asia/Singapore"
          }
        }
      }
    },
    "NewOrderV4.1": {
      "type": "object",
      "required": [
        "service_type",
        "service_level",
        "from",
        "to"
      ],
      "properties": {
        "service_type": {
          "$ref": "#/definitions/ServiceType"
        },
        "service_level": {
          "$ref": "#/definitions/ServiceLevel"
        },
        "requested_tracking_number": {
          "type": "string",
          "pattern": "^([a-zA-Z0-9]+[-])*[a-zA-Z0-9]+$",
          "minLength": 9,
          "description": "If your shipper account is a prefixless account, `requested_tracking_number` is ***required***.\n\nIf your shipper account has a tracking number prefix configured, the API will concat your prefix with the `requested_tracking_number` to generate the waybill tracking number.\n\nIf `requested_tracking_number` is not provided, the API will auto-generate a random tracking number, and concat your prefix with the `requested_tracking_number` to generate the waybill tracking number.\n\nThe total length of the generated `tracking_number` is also further validated based on your shipper setting.  The default length for `tracking_number` is usually around 18 characters.  If the `requested_tracking_number` is too short, the API will auto-pad the value with `0`s. Please check with us if you have any questions regarding your shipper account settings.\n\nFor marketplace platforms, `marketplace` information is required. Using the provided `seller_id`, the API will automatically create a new Ninja Van shipper account for your marketplace seller, _IF_ the `seller_id` was not registered in Ninja Van's systems beforehand."
        },
        "reference": {
          "type": "object",
          "description": "Reference information. This information is returned to shipper via webhooks, and can be used as query parameters when retrieving orders from Ninja Van's API.",
          "properties": {
            "merchant_order_number": {
              "type": "string",
              "description": "Identifier of order in shipper's systems.",
              "maxLength": 255
            }
          }
        },
        "from": {
          "type": "object",
          "description": "This data is used for the following purposes:\nIt is used:\n* As the contact details for informing sender regarding parcel updates,\n* As the address details to be printed in the waybill",
          "allOf": [
            {
              "$ref": "#/definitions/NewRecipient"
            }
          ]
        },
        "to": {
          "type": "object",
          "description": "This data is used as the delivery destination\nIt is used \n* as the contact details for informing recipient regarding parcel updates,\n* as the address details to be printed in the waybill",
          "allOf": [
            {
              "$ref": "#/definitions/NewRecipient"
            }
          ]
        },
        "marketplace": {
          "$ref": "#/definitions/NewMarketplaceOrder"
        },
        "international": {
          "type": "object",
          "description": "Details of cross-border specifics.",
          "required": [
            "portation"
          ],
          "properties": {
            "portation": {
              "type": "string",
              "enum": [
                "Import",
                "Export"
              ],
              "description": "For orders that involve goods which has been / needs to be imported into the country (be it by a forwarder or by Ninja Van), please indicate `Import` as the portation type.\n\nFor orders that require goods to be exported by Ninja Van to another country, please indicate `Export` as the portation type."
            }
          }
        },
        "parcel_job": {
          "type": "object",
          "description": "Details of parcel pickup and delivery job.\n\nIf pickup address is not provided, we will rely on the default pickup address, specified in the shipper pickup reservation settings.",
          "required": [
            "is_pickup_required",
            "delivery_timeslot",
            "delivery_start_date"
          ],
          "properties": {
            "allow_self_collection": {
              "type": "boolean",
              "description": "Boolean flag that indicates whether or not customer is allowed to self collect the parcels.\n***Compulsory*** if a valid delivery collection point (`to.collection_point`) is specified."
            },
            "is_pickup_required": {
              "type": "boolean",
              "description": "Boolean flag that indicates whether or not a pickup reservation is required. \nIf specified as `true`, the system will check if a  pickup reservation exists with the same:\n* `pickup_date`\n* Pickup Address (Detected from the `parcel_job.pickup_address` or `from.address`)\n\nA new pickup reservation will be created if none exists for the current pickup date and address.\n\nTo update the pickup address for a specific `pickup_address_slot_id`, the options are:\n* Calling Ninja Van's shipper support hotline.\n* Updating the address tied to the `pickup_address_id` via the pickup reservation API.\n* Sending in a new order with an updated pickup address.\n    * The pickup address specified in either the `from` or `pickup_address` field will be used to update the address\n    tied to the `pickup_address_id`.\n    \n    * ***NOTE:*** Existing pickup reservations tied to this `pickup_address_id`, that are already in progress will not be modified in any way.\n    \n    * ***NOTE:*** You account can be configured to _NOT_ update future pickup reservation addresses even if the address tied to the `pickup_address_id` has changed.\n\n\nTo update the pickup timeslot for a specific pickup reservation, the options are:\n* Calling Ninja Van's shipper support hotline.\n* Sending in a new order with the same `pickup_address_id`, `pickup_date` but with a different `pickup_timeslot`.\n\nFor more details, please refer to the notes for `pickup_timeslot`  and `pickup_address_id` fields.\n\nPlease note that the following fields must be provided if a `Scheduled` pickup is required:\n* `pickup_date`\n* `pickup_timeslot`\n* `pickup_approx_volume`",
              "default": false
            },
            "pickup_address": {
              "$ref": "#/definitions/NewRecipient"
            },
            "pickup_address_id": {
              "type": "string",
              "pattern": "^([a-zA-Z0-9]+[-])*[a-zA-Z0-9]+$",
              "description": "For each order create API request, if pickup is requested, the system will check if the specified pickup address (taken from the `from` or `pickup_address` field) is different from the existing address stored with the specified `pickup_address_id`.\n\nThis pickup_address_id can be mapped to your internal address DB ID.  If you store address in a database table, passing in the address ID from your DB is one of the ways you can provide Ninja Van with a `pickup_address_id`.\n\nIf the specified pickup_address_id is not mapped to an existing address, the system will:\n* Perform a `POST` operation and creates a new address, mapped to the provided `pickup_address_id`.\n\nIf the specified pickup address is different from the existing address stored with the specified `pickup_address_id`, the system will:\n* Perform a `PUT` operation and replace the address stored with the specified `pickup_address_id`.\n* Update the address for all future pickup reservations tied to the old address.",
              "minLength": 1,
              "maxLength": 64
            },
            "pickup_service_type": {
              "type": "string",
              "enum": [
                "Scheduled",
                "On-Demand"
              ],
              "default": "Scheduled",
              "description": "Please indicate the pickup service type that you require. Do check with your Ninja Van sales rep  which pickup type(s) your account is configured for.\n\n* If you need to indicate a specific pickup date and/or timeslot, please use `Scheduled` pickups.\n* If you require an immediate pickup, do use `On-Demand`. \n\nWe will reject the request if your account is not configured for the specified `pickup_service_type`."
            },
            "pickup_service_level": {
              "type": "string",
              "enum": [
                "Standard",
                "Premium"
              ],
              "default": "Standard",
              "description": "***Note:*** Does not apply to `On-Demand` pickups.\n\nFor `Scheduled` pickups, you have the option of choosing `Standard` or `Premium` pickup service levels.\n\n`Premium` pickups have shorter pickup timeslot windows, and the cut-off rules are more relaxed. Please check with your Ninja Van sales rep to see if your account is eligible for `Premium` pickups."
            },
            "pickup_date": {
              "type": "string",
              "pattern": "^([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))$",
              "description": "Specifies the date for which the pickup will occur. Please take note that the acceptable format is `yyyy-MM-dd`.\n\nThe system will adjust the pickup date automatically to the next available working day,  if the specified pickup date:\n* Is on a blocked date (e.g. public holiday or warehouse closure),\n* Does not meet the cut-off time for pickup reservations for that day.\n\nAny adjustments to pickup date will be returned in the response."
            },
            "pickup_timeslot": {
              "$ref": "#/definitions/TimeslotInfo",
              "description": "Specifies the timeslot for which the pickup will occur.\n\nIf the specified pickup timeslot is different from the existing pickup reservation for the specified `pickup_date`, for the specified pickup address, the system will:\n\n* Perform a `PUT` operation and replace the pickup timeslot  for the existing pickup reservation on the specified `pickup_date` at the specified pickup address.\n\n***Note:*** Valid timeslots are:\n* \"09:00\" to \"12:00\"\n* \"09:00\" to \"18:00\"\n* \"09:00\" to \"22:00\"\n* \"12:00\" to \"15:00\"\n* \"15:00\" to \"18:00\"\n* \"18:00\" to \"22:00\"\n\n***NOTE:*** For shippers who are eligible for `Premium` pickups, a longer list of timeslots with shorter time windows are available to you. Please check with your Ninja Van sales rep on your available options."
            },
            "pickup_approx_volume": {
              "type": "string",
              "enum": [
                "Full-Van Load",
                "Half-Van Load",
                "Larger than Van Load",
                "Less than 10 Parcels",
                "Less than 3 Parcels",
                "Trolley Required"
              ],
              "default": "Less than 3 Parcels"
            },
            "pickup_instructions": {
              "type": "string",
              "description": "Instruction to driver for pickup attempts."
            },
            "delivery_start_date": {
              "type": "string",
              "pattern": "^([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))$",
              "description": "Specifies the start date of the delivery period. E.g. For standard orders that takes 3 days, if the  `delivery_start_date` is on `2017-02-10`, the delivery will be attempted anytime from `2017-02-10` to `2017-02-12`. Please take note that the acceptable format is `yyyy-MM-dd`.\n\nDate will be adjusted for blocked dates automatically.  Please double check adjusted `delivery_start_date` in response.\n\nIf order is created before cut-off time, `delivery_start_date`  is defaulted to the same day (if that day is not a blocked date); otherwise `delivery_start_date` is defaulted to the next available date."
            },
            "delivery_timeslot": {
              "$ref": "#/definitions/TimeslotInfo"
            },
            "delivery_instructions": {
              "type": "string",
              "description": "Instruction to driver for delivery attempts."
            },
            "allow_weekend_delivery": {
              "type": "boolean",
              "default": true,
              "description": "Specifies whether or not deliveries should be attempted on weekends."
            },
            "cash_on_delivery": {
              "type": "number",
              "format": "double",
              "description": "Specifies the cash that should be picked up from recipient of the parcel."
            },
            "insured_value": {
              "type": "number",
              "format": "double",
              "description": "Specifies the desired insured value of the parcel."
            },
            "dimensions": {
              "$ref": "#/definitions/Dimension",
              "description": "Specifies the dimension of the parcel. This is used for parcel rates calcuations.\n\n***NOTE:*** Please check with your Ninja Van sales rep to see which  dimension properties should you be sending in."
            }
          }
        }
      },
      "example": {
        "service_type": "Parcel",
        "service_level": "Standard",
        "requested_tracking_number": "1234-56789",
        "reference": {
          "merchant_order_number": "SHIP-1234-56789"
        },
        "from": {
          "name": "John Doe",
          "phone_number": "+60122222222",
          "email": "john.doe@gmail.com",
          "address": {
            "address1": "17 Lorong Jambu 3",
            "address2": "",
            "area": "Taman Sri Delima",
            "city": "Simpang Ampat",
            "state": "Pulau Pinang",
            "address_type": "office",
            "country": "MY",
            "postcode": "51200"
          }
        },
        "to": {
          "name": "Jane Doe",
          "phone_number": "+6212222222222",
          "email": "jane.doe@gmail.com",
          "address": {
            "address1": "Gedung Balaikota DKI Jakarta",
            "address2": "Jalan Medan Merdeka Selatan No. 10",
            "kelurahan": "Kelurahan Gambir",
            "kecamatan": "Kecamatan Gambir",
            "city": "Jakarta Selatan",
            "province": "Jakarta",
            "country": "ID",
            "postcode": "10110"
          }
        },
        "parcel_job": {
          "is_pickup_required": true,
          "pickup_address_id": 98989012,
          "pickup_service_type": "Scheduled",
          "pickup_service_level": "Premium",
          "pickup_date": "2018-01-18T00:00:00.000Z",
          "pickup_timeslot": {
            "start_time": "09:00",
            "end_time": "12:00",
            "timezone": "Asia/Singapore"
          },
          "pickup_instructions": "Pickup with care!",
          "delivery_instructions": "If recipient is not around, leave parcel in power riser.",
          "delivery_start_date": "2018-01-19",
          "delivery_timeslot": {
            "start_time": "09:00",
            "end_time": "22:00",
            "timezone": "Asia/Singapore"
          }
        }
      }
    },
    "NewMarketplaceOrder": {
      "type": "object",
      "description": "Required if order `type` is `Marketplace`.",
      "required": [
        "seller_id",
        "seller_company_name"
      ],
      "properties": {
        "seller_id": {
          "type": "string",
          "pattern": "^([a-zA-Z0-9]+[-])*[a-zA-Z0-9]+$",
          "description": "External reference for this marketplace seller.   If your platform is a marketplace, and you are creating an order for a seller on your platform, do pass in the unique seller ID in this field.",
          "minLength": 1,
          "maxLength": 255
        },
        "seller_company_name": {
          "type": "string",
          "description": "Company name of this marketplace seller.",
          "minLength": 2,
          "maxLength": 255
        }
      }
    },
    "NewRecipient": {
      "type": "object",
      "required": [
        "name",
        "phone_number",
        "email",
        "address"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe",
          "minLength": 3,
          "maxLength": 255
        },
        "phone_number": {
          "type": "string",
          "description": "Phone number of the contact.\n\nAPI will attempt to format the number based on the E.164 format,  using the country code of the address provided.  If it can be formatted, we will take that the number is a valid one.\n\nAPI only requires that either the `email` or `phone_number` is valid. ",
          "maxLength": 32,
          "minLength": 6,
          "example": "+65 98761234"
        },
        "email": {
          "type": "string",
          "description": "Email address of the contact.\n\nMust be a valid email address format. The formal definitions are in `RFC 5322` (sections 3.2.3 and 3.4.1) and `RFC 5321`;  with a more readable form given in the informational `RFC 3696` and the associated errata.\n\nAPI only requires that either the `email` or `phone_number` is valid;  but if email is provided, it will be validated and an error will be thrown if the validation fails.",
          "format": "email",
          "example": "john.doe@mail.com"
        },
        "address": {
          "$ref": "#/definitions/NewAddress"
        },
        "collection_point": {
          "type": "string",
          "enum": [
            "Ninja PUDO @ NUH",
            "Ninja PUDO @ Orchard"
          ],
          "description": "***Experimental***"
        }
      }
    },
    "NewAddress": {
      "type": "object",
      "required": [
        "address1",
        "country"
      ],
      "properties": {
        "address1": {
          "type": "string",
          "example": "123 Awesome Street",
          "description": "If you are collecting granular address information, please concat the Building No, Building Name, and Street information in this field."
        },
        "address2": {
          "type": "string",
          "example": "#01-01"
        },
        "country": {
          "$ref": "#/definitions/CountryCode"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "minimum": -180,
          "maximum": 180
        },
        "address_type": {
          "type": "string",
          "example": "office",
          "description": "To indicate the type of the address. Value must be either `home` or `office`"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/NewIndonesiaAddress"
        },
        {
          "$ref": "#/definitions/NewMyanmarAddress"
        },
        {
          "$ref": "#/definitions/NewMalaysiaAddress"
        },
        {
          "$ref": "#/definitions/NewPhilippinesAddress"
        },
        {
          "$ref": "#/definitions/NewSingaporeAddress"
        },
        {
          "$ref": "#/definitions/NewThailandAddress"
        },
        {
          "$ref": "#/definitions/NewVietnamAddress"
        }
      ]
    },
    "NewIndonesiaAddress": {
      "type": "object",
      "description": "Indonesia specific address fields.",
      "required": [
        "postcode"
      ],
      "properties": {
        "kelurahan": {
          "type": "string",
          "description": "For ID addresses."
        },
        "kecamatan": {
          "type": "string",
          "description": "For ID addresses."
        },
        "city": {
          "type": "string",
          "description": "For ID addresses."
        },
        "province": {
          "type": "string",
          "description": "For ID addresses."
        },
        "postcode": {
          "type": "string",
          "description": "Postal Code for ID addresses."
        }
      },
      "example": {
        "kelurahan": "Kelurahan Gambir",
        "kecamatan": "Kecamatan Gambir",
        "city": "Jakarta Selatan",
        "province": "Jakarta",
        "postcode": "10110"
      }
    },
    "NewMyanmarAddress": {
      "type": "object",
      "description": "Myanmar specific address fields.",
      "required": [
        "postcode"
      ],
      "properties": {
        "township": {
          "type": "string",
          "description": "For MM addresses."
        },
        "district": {
          "type": "string",
          "description": "For MM addresses."
        },
        "state": {
          "type": "string",
          "description": "For MM addresses."
        },
        "postcode": {
          "type": "string",
          "description": "Postal Code for MM addresses."
        }
      },
      "example": {
        "township": "San Lorenzo South Subdivision",
        "district": "Malitlit",
        "state": "LAGUNA",
        "postcode": "4026"
      }
    },
    "NewMalaysiaAddress": {
      "type": "object",
      "description": "Malaysia specific address fields.",
      "required": [
        "postcode"
      ],
      "properties": {
        "area": {
          "type": "string",
          "description": "For MY addresses."
        },
        "city": {
          "type": "string",
          "description": "For MY addresses."
        },
        "state": {
          "type": "string",
          "description": "For MY addresses."
        },
        "postcode": {
          "type": "string",
          "description": "Postal Code for MY addresses."
        }
      },
      "example": {
        "area": "Taman Sri Delima",
        "city": "Simpang Ampat",
        "state": "Pulau Pinang",
        "postcode": "51200"
      }
    },
    "NewPhilippinesAddress": {
      "type": "object",
      "description": "Philippines specific address fields.",
      "required": [
        "postcode"
      ],
      "properties": {
        "subdivision": {
          "type": "string",
          "description": "For PH addresses."
        },
        "district": {
          "type": "string",
          "description": "For PH addresses."
        },
        "city": {
          "type": "string",
          "description": "For PH addresses."
        },
        "province": {
          "type": "string",
          "description": "For PH addresses."
        },
        "postcode": {
          "type": "string",
          "description": "Postal Code for PH addresses."
        }
      },
      "example": {
        "subdivision": "San Lorenzo South Subdivision",
        "district": "Malitlit",
        "city": "Santa Rosa",
        "province": "LAGUNA",
        "postcode": "4026"
      }
    },
    "NewSingaporeAddress": {
      "type": "object",
      "description": "Singapore specific address fields.",
      "required": [
        "postcode"
      ],
      "properties": {
        "postcode": {
          "type": "string",
          "description": "Postal Code for SG addresses."
        }
      }
    },
    "NewThailandAddress": {
      "type": "object",
      "description": "Thailand specific address fields.",
      "required": [
        "postcode"
      ],
      "properties": {
        "sub-district": {
          "type": "string",
          "description": "For TH addresses."
        },
        "district": {
          "type": "string",
          "description": "For TH addresses."
        },
        "province": {
          "type": "string",
          "description": "For TH addresses."
        },
        "postcode": {
          "type": "string",
          "description": "Postal Code for TH addresses."
        }
      },
      "example": {
        "sub-district": "Bangyai",
        "district": "Bangyai",
        "province": "Nonthaburi",
        "postcode": "11140"
      }
    },
    "NewVietnamAddress": {
      "type": "object",
      "description": "Vietnam specific address fields.",
      "properties": {
        "ward": {
          "type": "string",
          "description": "For VN addresses."
        },
        "district": {
          "type": "string",
          "description": "For VN addresses."
        },
        "city": {
          "type": "string",
          "description": "For VN addresses."
        }
      },
      "example": {
        "ward": "phường Nguyễn Du",
        "district": "quận Hai Bà Trưng",
        "city": "thành phố Hà Nội"
      }
    },
    "CountryCode": {
      "type": "string",
      "enum": [
        "SG",
        "MY",
        "TH",
        "ID",
        "VN",
        "PH",
        "MM"
      ],
      "example": "SG"
    },
    "ServiceType": {
      "type": "string",
      "description": "Service type. This will be used as a instruction to inform Ninja Van on what jobs to schedule for this order.",
      "enum": [
        "Parcel",
        "Return",
        "Marketplace",
        "Bulky",
        "International"
      ]
    },
    "ServiceLevel": {
      "type": "string",
      "description": "Shipment service level.",
      "enum": [
        "Standard",
        "Express",
        "Sameday",
        "Nextday"
      ]
    },
    "TimeslotInfo": {
      "type": "object",
      "description": "Timeslot information.\n\nValid timeslots are:\n\n  * \"09:00\" to \"12:00\"\n  * \"09:00\" to \"18:00\"\n  * \"09:00\" to \"22:00\"\n  * \"12:00\" to \"15:00\"\n  * \"15:00\" to \"18:00\"\n  * \"18:00\" to \"22:00\"",
      "required": [
        "start_time",
        "end_time"
      ],
      "properties": {
        "start_time": {
          "type": "string",
          "pattern": "^([0-1][0-9]|2[0-3]):[0-5][0-9]$"
        },
        "end_time": {
          "type": "string",
          "pattern": "^([0-1][0-9]|2[0-3]):[0-5][0-9]$"
        },
        "timezone": {
          "$ref": "#/definitions/Timezone"
        }
      }
    },
    "Timezone": {
      "type": "string",
      "enum": [
        "Asia/Singapore",
        "Asia/Kuala_Lumpur",
        "Asia/Jakarta",
        "Asia/Jayapura",
        "Asia/Makassar",
        "Asia/Bangkok",
        "Asia/Manila",
        "Asia/Ho_Chi_Minh",
        "Asia/Yangon"
      ]
    },
    "Dimension": {
      "type": "object",
      "description": "Dimension information about parcels or objects.",
      "properties": {
        "size": {
          "type": "string",
          "enum": [
            "S",
            "M",
            "L",
            "XL",
            "XXL"
          ]
        },
        "weight": {
          "type": "number",
          "description": "The weight of the parcel, in kilograms (k.g.).",
          "format": "double"
        },
        "length": {
          "type": "number",
          "description": "The length of the parcel, in centimeters (c.m.).",
          "format": "double"
        },
        "width": {
          "type": "number",
          "description": "The width of the parcel, in centimeters (c.m.).",
          "format": "double"
        },
        "height": {
          "type": "number",
          "description": "The height of the parcel, in centimeters (c.m.).",
          "format": "double"
        }
      }
    },
    "PickupBooking": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewPickupBooking"
        }
      ],
      "example": {
        "pickup_address": {
          "name": "John Doe",
          "phone_number": "+60122222222",
          "email": "john.doe@gmail.com",
          "address": {
            "address1": "17 Lorong Jambu 3",
            "address2": "",
            "area": "Taman Sri Delima",
            "city": "Simpang Ampat",
            "state": "Pulau Pinang",
            "country": "MY",
            "postcode": "51200"
          }
        },
        "pickup_service_type": "Scheduled",
        "pickup_service_level": "Standard",
        "pickup_date": "2018-01-18T00:00:00.000Z",
        "pickup_timeslot": {
          "start_time": "09:00",
          "end_time": "12:00",
          "timezone": "Asia/Kuala_Lumpur"
        },
        "pickup_instructions": "Pickup with care!",
        "pickup_approx_volume": "Less than 3 Parcels"
      }
    },
    "NewPickupBooking": {
      "type": "object",
      "properties": {
        "pickup_service_type": {
          "type": "string",
          "enum": [
            "Scheduled",
            "On-Demand"
          ],
          "default": "Scheduled",
          "description": "Please indicate the pickup service type that you require. Do check with your Ninja Van sales rep  which pickup type(s) your account is configured for.\n\n* If you need to indicate a specific pickup date and/or timeslot, please use `Scheduled` pickups.\n* If you require an immediate pickup, do use `On-Demand`. \n    \n\nWe will reject the request if your account is not configured for the specified `pickup_service_type`."
        },
        "pickup_service_level": {
          "type": "string",
          "enum": [
            "Standard",
            "Premium"
          ],
          "default": "Standard",
          "description": "***Note:*** Does not apply to `On-Demand` pickups.\n\nFor `Scheduled` pickups, you have the option of choosing `Standard` or `Premium` pickup service levels.\n\n`Premium` pickups have shorter pickup timeslot windows, and the cut-off rules are more relaxed. Please check with your Ninja Van sales rep to see if your account is eligible for `Premium` pickups."
        },
        "pickup_date": {
          "type": "string",
          "pattern": "^([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))$",
          "description": "Specifies the date for which the pickup will occur. Please take note that the acceptable format is `yyyy-MM-dd`.\n\nThe system will adjust the pickup date automatically to the next available working day,  if the specified pickup date:\n* Is on a blocked date (e.g. public holiday or warehouse closure),\n* Does not meet the cut-off time for pickup bookings for that day.\n\nAny adjustments to pickup date will be returned in the response."
        },
        "pickup_timeslot": {
          "$ref": "#/definitions/TimeslotInfo"
        },
        "pickup_instructions": {
          "type": "string"
        },
        "pickup_approx_volume": {
          "type": "string",
          "enum": [
            "Full-Van Load",
            "Half-Van Load",
            "Larger than Van Load",
            "Less than 10 Parcels",
            "Less than 3 Parcels",
            "Trolley Required"
          ]
        },
        "pickup_address": {
          "$ref": "#/definitions/NewRecipient"
        },
        "reference": {
          "type": "object",
          "description": "Reference information. This information is returned to shipper via webhooks, and can be used as query parameters when retrieving pickup bookings from Ninja Van's API.",
          "properties": {
            "merchant_pickup_booking_number": {
              "type": "string",
              "description": "Identifier of pickup booking in shipper's systems.",
              "maxLength": 255
            }
          }
        }
      },
      "example": {
        "pickup_address": {
          "name": "John Doe",
          "phone_number": "+60122222222",
          "email": "john.doe@gmail.com",
          "address": {
            "address1": "17 Lorong Jambu 3",
            "address2": "",
            "area": "Taman Sri Delima",
            "city": "Simpang Ampat",
            "state": "Pulau Pinang",
            "country": "MY",
            "postcode": "51200"
          }
        },
        "pickup_service_type": "Scheduled",
        "pickup_service_level": "Standard",
        "pickup_date": "2018-01-18T00:00:00.000Z",
        "pickup_timeslot": {
          "start_time": "09:00",
          "end_time": "12:00",
          "timezone": "Asia/Kuala_Lumpur"
        },
        "pickup_instructions": "Pickup with care!",
        "pickup_approx_volume": "Less than 3 Parcels",
        "reference": {
          "merchant_pickup_booking_number": "Pickup-123456"
        }
      }
    },
    "AccessTokenGrantRequest": {
      "type": "object",
      "required": [
        "client_id",
        "client_secret",
        "grant_type"
      ],
      "properties": {
        "client_id": {
          "type": "string",
          "description": "Client ID"
        },
        "client_secret": {
          "type": "string",
          "description": "Client Secret"
        },
        "grant_type": {
          "type": "string",
          "enum": [
            "client_credentials"
          ]
        }
      }
    },
    "AccessTokenGrantResponse": {
      "type": "object",
      "required": [
        "access_token",
        "expires",
        "expires_in",
        "token_type"
      ],
      "properties": {
        "access_token": {
          "type": "string",
          "description": "OAuth Bearer access token to be included in the `Authorization` HTTP header for all API requests."
        },
        "expires": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The epoch timestamp at which the access token will expire."
        },
        "expires_in": {
          "type": "integer",
          "format": "int32",
          "description": "The number of seconds at which the access token will expire in.",
          "minimum": 300
        },
        "token_type": {
          "type": "string",
          "enum": [
            "bearer"
          ]
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "$ref": "#/definitions/Error"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "request_id"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "Internal error reference Code."
        },
        "request_id": {
          "type": "string",
          "description": "Request identifier for error tracking."
        },
        "title": {
          "type": "string",
          "description": "Frontend friendly error title."
        },
        "message": {
          "type": "string",
          "description": "Frontend friendly error message."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          }
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "required": [
        "reason",
        "field",
        "message"
      ],
      "properties": {
        "reason": {
          "type": "string"
        },
        "field": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "CancelOrderResponse": {
      "type": "object",
      "properties": {
        "trackingId": {
          "type": "string",
          "description": "Tracking ID of the order that was cancelled."
        },
        "status": {
          "type": "string",
          "description": "Status of the order."
        },
        "updatedAt": {
          "type": "string",
          "format": "datetime",
          "description": "Date that the order was cancelled."
        }
      }
    }
  }
}